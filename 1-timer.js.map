{"version":3,"file":"1-timer.js","sources":["../src/js/helpers.js","../src/js/1-timer.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// ------------------------FORMATING DATE--------------------------\n\nexport function addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\n// ------------------------CONVERT FROM MS-------------------------\n\n\nexport function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// ------------------ERROR MESSAGE FOR TIMER--------------------------\n\nexport function errorMessage(message) {\n iziToast.error({\n    \n   message: message,\n   position: 'topLeft',\n   transitionIn: 'fadeInDown',\n   backgroundColor: 'rgb(231, 19, 36)',\n   messageColor: 'white',\n   iconColor: 'white',\n   messageSize: '16px',\n   class: 'toast',\n});\n}\n\n// --------------ADDING AND REMOVE DISABLE STYLES FOR BTN----------------\n\n\nexport function buttonDisabledToggle(element, color) {\n  if (element.disabled) {\n    element.style.pointerEvents = \"none\";\n    element.style.background = color;\n  } else {\n    element.style.removeProperty(\"pointer-events\");\n    element.style.removeProperty(\"background\");\n  }\n}","import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"flatpickr/dist/themes/dark.css\";\nimport { convertMs, addLeadingZero, errorMessage, buttonDisabledToggle } from './helpers'\n\n// GLOBAL\nlet timerID = null;\nconst startButton = document.querySelector(\".button\");\n\n// add disable btn styles\nbuttonDisabledToggle(startButton,'#7a3136')\n\n// FLATPICR LIBRARY IMPLEMENT\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // CLOSING BEHAVIOR LOGIC FOR ONCLOSE METHOD\n  onClose(selectedDates) {\n    \n    const endDate = new Date(selectedDates[0].getTime());\n    const now = new Date().getTime();\n    \n    if (endDate - now < 0) {\n      errorMessage(\"Please choose a date in the future\");\n      return;\n    }\n    //make btn active\n    startButton.removeAttribute('disabled')\n    buttonDisabledToggle(startButton,'#7a3136')\n    // remove prev interval, add new and start timer\n    startButton.removeEventListener('click', startTimer);\n    startButton.addEventListener('click', () => {\n      startTimer(endDate);\n      // make btn disabled\n      startButton.setAttribute('disabled', 'true')\n      buttonDisabledToggle(startButton,'#7a3136') \n    });\n  \n  }   \n}\nflatpickr(\"#datetime-picker\", options);\n\n\n//START TIMER LOGIC\nfunction startTimer(endDate) {\n      // if prev timer exist\n      if (timerID) clearInterval(timerID);\n      // start timer\n      timerID = setInterval(() => {\n      let now = new Date().getTime();\n      const timeLeft = endDate - now;\n      // if time on timer ends\n      if (timeLeft <= 0) {\n        clearInterval(timerID);\n        displayTimer(0, 0, 0, 0);\n        return;\n        }\n      // convert time to d.h.m.s and adding to html \n      let { days, hours, minutes, seconds } = convertMs(endDate - now);\n      displayTimer(days, hours, minutes, seconds);\n        \n      }, 1000)\n    }\n\n//ADDING TIME TO HTML\nfunction displayTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days) ;\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\n\n"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","errorMessage","message","iziToast","buttonDisabledToggle","element","color","timerID","startButton","options","selectedDates","endDate","now","startTimer","flatpickr","displayTimer"],"mappings":"qyBAKO,SAASA,EAAeC,EAAO,CACpC,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAKO,SAASC,EAAUC,EAAI,CAQ5B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAIO,SAASC,EAAaC,EAAS,CACrCC,EAAS,MAAM,CAEb,QAASD,EACT,SAAU,UACV,aAAc,aACd,gBAAiB,mBACjB,aAAc,QACd,UAAW,QACX,YAAa,OACb,MAAO,OACV,CAAC,CACD,CAKO,SAASE,EAAqBC,EAASC,EAAO,CAC/CD,EAAQ,UACVA,EAAQ,MAAM,cAAgB,OAC9BA,EAAQ,MAAM,WAAaC,IAE3BD,EAAQ,MAAM,eAAe,gBAAgB,EAC7CA,EAAQ,MAAM,eAAe,YAAY,EAE7C,CCpDA,IAAIE,EAAU,KACd,MAAMC,EAAc,SAAS,cAAc,SAAS,EAGpDJ,EAAqBI,EAAY,SAAS,EAG1C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAErB,MAAMC,EAAU,IAAI,KAAKD,EAAc,CAAC,EAAE,QAAO,CAAE,EAC7CE,EAAM,IAAI,KAAM,EAAC,QAAO,EAE9B,GAAID,EAAUC,EAAM,EAAG,CACrBX,EAAa,oCAAoC,EACjD,MACD,CAEDO,EAAY,gBAAgB,UAAU,EACtCJ,EAAqBI,EAAY,SAAS,EAE1CA,EAAY,oBAAoB,QAASK,CAAU,EACnDL,EAAY,iBAAiB,QAAS,IAAM,CAC1CK,EAAWF,CAAO,EAElBH,EAAY,aAAa,WAAY,MAAM,EAC3CJ,EAAqBI,EAAY,SAAS,CAChD,CAAK,CAEF,CACH,EACAM,EAAU,mBAAoBL,CAAO,EAIrC,SAASI,EAAWF,EAAS,CAEnBJ,GAAS,cAAcA,CAAO,EAElCA,EAAU,YAAY,IAAM,CAC5B,IAAIK,EAAM,IAAI,KAAM,EAAC,QAAO,EAG5B,GAFiBD,EAAUC,GAEX,EAAG,CACjB,cAAcL,CAAO,EACrBQ,EAAa,EAAG,EAAG,EAAG,CAAC,EACvB,MACC,CAEH,GAAI,CAAE,KAAAlB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAAUgB,EAAUC,CAAG,EAC/DG,EAAalB,EAAMC,EAAOC,EAASC,CAAO,CAEzC,EAAE,GAAI,CACR,CAGL,SAASe,EAAalB,EAAMC,EAAOC,EAASC,EAAS,CACnD,SAAS,cAAc,aAAa,EAAE,YAAcP,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC/E"}