{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport { convertMs, addLeadingZero, errorMessage, enable, disable } from './helpers'\n\n// GLOBAL\nlet timerID = null;\nconst startButton = document.querySelector('.button');\nconst dateTimePicker = document.querySelector('#datetime-picker')\n\n// add disable btn styles\ndisable(startButton, 'disable-btn')\n\n\n// FLATPICR LIBRARY IMPLEMENT\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // CLOSING BEHAVIOR LOGIC FOR ONCLOSE METHOD\n  onClose(selectedDates) {\n      const endDate = new Date(selectedDates[0].getTime());\n      const now = new Date().getTime();\n    \n      if (endDate - now < 0) {\n      errorMessage(\"Please choose a date in the future\");\n      return;\n      }\n\n      //make btn active\n      enable(startButton, 'disable-btn')\n\n      // remove prev interval, add new and start timer\n      startButton.removeEventListener('click', startTimer);\n      startButton.addEventListener('click', () => {\n        startTimer(endDate);\n        // make btn disabled\n        disable(startButton, 'disable-btn');\n        disable(dateTimePicker, 'disable-input')\n      });\n  }   \n}\n\ntry {\n  flatpickr(\"#datetime-picker\", options);\n} catch (err) {\n  console.error(\"Flatpickr initialization failed:\", err);\n  errorMessage(\"Something went wrong. Try again.\");\n}\n\n//START TIMER LOGIC\nfunction startTimer(endDate) {\n      // if prev timer exist\n  if (timerID) clearInterval(timerID);\n  \n      // start timer\n      timerID = setInterval(() => {\n      let now = Date.now();\n      const timeLeft = endDate - now;\n      // convert time to d.h.m.s and adding to html \n      let  timeUnits  = convertMs(endDate - now);\n      displayTimer(timeUnits);  \n\n      // if time on timer ends\n      if (timeLeft <= 0) {\n        clearInterval(timerID);\n        displayTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        enable(dateTimePicker, 'disable-input');\n        return;\n        } \n      }, 1000)\n    }\n\n//ADDING TIME TO HTML\nfunction displayTimer(timeUnits) {\n   Object.keys(timeUnits).forEach(key => {\n    document.querySelector(`[data-${key}]`).textContent = addLeadingZero(timeUnits[key]) ;\n  });\n}"],"names":["timerID","startButton","dateTimePicker","disable","options","selectedDates","endDate","now","errorMessage","enable","startTimer","flatpickr","err","timeLeft","timeUnits","convertMs","displayTimer","key","addLeadingZero"],"mappings":"gKAMA,IAAIA,EAAU,KACd,MAAMC,EAAc,SAAS,cAAc,SAAS,EAC9CC,EAAiB,SAAS,cAAc,kBAAkB,EAGhEC,EAAQF,EAAa,aAAa,EAIlC,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACnB,MAAMC,EAAU,IAAI,KAAKD,EAAc,CAAC,EAAE,QAAO,CAAE,EAC7CE,EAAM,IAAI,KAAM,EAAC,QAAO,EAE9B,GAAID,EAAUC,EAAM,EAAG,CACvBC,EAAa,oCAAoC,EACjD,MACC,CAGDC,EAAOR,EAAa,aAAa,EAGjCA,EAAY,oBAAoB,QAASS,CAAU,EACnDT,EAAY,iBAAiB,QAAS,IAAM,CAC1CS,EAAWJ,CAAO,EAElBH,EAAQF,EAAa,aAAa,EAClCE,EAAQD,EAAgB,eAAe,CAC/C,CAAO,CACJ,CACH,EAEA,GAAI,CACFS,EAAU,mBAAoBP,CAAO,CACvC,OAASQ,EAAK,CACZ,QAAQ,MAAM,mCAAoCA,CAAG,EACrDJ,EAAa,kCAAkC,CACjD,CAGA,SAASE,EAAWJ,EAAS,CAEvBN,GAAS,cAAcA,CAAO,EAG9BA,EAAU,YAAY,IAAM,CAC5B,IAAIO,EAAM,KAAK,MACf,MAAMM,EAAWP,EAAUC,EAE3B,IAAKO,EAAaC,EAAUT,EAAUC,CAAG,EAIzC,GAHAS,EAAaF,CAAS,EAGlBD,GAAY,EAAG,CACjB,cAAcb,CAAO,EACrBgB,EAAa,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC1DP,EAAOP,EAAgB,eAAe,EACtC,MACC,CACF,EAAE,GAAI,CACR,CAGL,SAASc,EAAaF,EAAW,CAC9B,OAAO,KAAKA,CAAS,EAAE,QAAQG,GAAO,CACrC,SAAS,cAAc,SAASA,CAAG,GAAG,EAAE,YAAcC,EAAeJ,EAAUG,CAAG,CAAC,CACvF,CAAG,CACH"}