{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"flatpickr/dist/themes/dark.css\";\nimport { convertMs, addLeadingZero, errorMessage, buttonDisabledToggle } from './helpers'\n\n// GLOBAL\nlet timerID = null;\nconst startButton = document.querySelector(\".button\");\n\n// add disable btn styles\nbuttonDisabledToggle(startButton,'#7a3136')\n\n// FLATPICR LIBRARY IMPLEMENT\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // CLOSING BEHAVIOR LOGIC FOR ONCLOSE METHOD\n  onClose(selectedDates) {\n    \n    const endDate = new Date(selectedDates[0].getTime());\n    const now = new Date().getTime();\n    \n    if (endDate - now < 0) {\n      errorMessage(\"Please choose a date in the future\");\n      return;\n    }\n    //make btn active\n    startButton.removeAttribute('disabled')\n    buttonDisabledToggle(startButton,'#7a3136')\n    // remove prev interval, add new and start timer\n    startButton.removeEventListener('click', startTimer);\n    startButton.addEventListener('click', () => {\n      startTimer(endDate);\n      // make btn disabled\n      startButton.setAttribute('disabled', 'true')\n      buttonDisabledToggle(startButton,'#7a3136') \n    });\n  \n  }   \n}\nflatpickr(\"#datetime-picker\", options);\n\n\n//START TIMER LOGIC\nfunction startTimer(endDate) {\n      // if prev timer exist\n      if (timerID) clearInterval(timerID);\n      // start timer\n      timerID = setInterval(() => {\n      let now = new Date().getTime();\n      const timeLeft = endDate - now;\n      // if time on timer ends\n      if (timeLeft <= 0) {\n        clearInterval(timerID);\n        displayTimer(0, 0, 0, 0);\n        return;\n        }\n      // convert time to d.h.m.s and adding to html \n      let { days, hours, minutes, seconds } = convertMs(endDate - now);\n      displayTimer(days, hours, minutes, seconds);\n        \n      }, 1000)\n    }\n\n//ADDING TIME TO HTML\nfunction displayTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days) ;\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\n\n"],"names":["timerID","startButton","buttonDisabledToggle","options","selectedDates","endDate","now","errorMessage","startTimer","flatpickr","displayTimer","days","hours","minutes","seconds","convertMs","addLeadingZero"],"mappings":"8JAMA,IAAIA,EAAU,KACd,MAAMC,EAAc,SAAS,cAAc,SAAS,EAGpDC,EAAqBD,EAAY,SAAS,EAG1C,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAErB,MAAMC,EAAU,IAAI,KAAKD,EAAc,CAAC,EAAE,QAAO,CAAE,EAC7CE,EAAM,IAAI,KAAM,EAAC,QAAO,EAE9B,GAAID,EAAUC,EAAM,EAAG,CACrBC,EAAa,oCAAoC,EACjD,MACD,CAEDN,EAAY,gBAAgB,UAAU,EACtCC,EAAqBD,EAAY,SAAS,EAE1CA,EAAY,oBAAoB,QAASO,CAAU,EACnDP,EAAY,iBAAiB,QAAS,IAAM,CAC1CO,EAAWH,CAAO,EAElBJ,EAAY,aAAa,WAAY,MAAM,EAC3CC,EAAqBD,EAAY,SAAS,CAChD,CAAK,CAEF,CACH,EACAQ,EAAU,mBAAoBN,CAAO,EAIrC,SAASK,EAAWH,EAAS,CAEnBL,GAAS,cAAcA,CAAO,EAElCA,EAAU,YAAY,IAAM,CAC5B,IAAIM,EAAM,IAAI,KAAM,EAAC,QAAO,EAG5B,GAFiBD,EAAUC,GAEX,EAAG,CACjB,cAAcN,CAAO,EACrBU,EAAa,EAAG,EAAG,EAAG,CAAC,EACvB,MACC,CAEH,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKC,EAAUV,EAAUC,CAAG,EAC/DI,EAAaC,EAAMC,EAAOC,EAASC,CAAO,CAEzC,EAAE,GAAI,CACR,CAGL,SAASJ,EAAaC,EAAMC,EAAOC,EAASC,EAAS,CACnD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC/E"}